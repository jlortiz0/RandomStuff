/**
 * @name AgeCounter
 * @author jlortiz
 * @authorId 210556673188823041
 * @version 1.0.2
 * @description Rank server members by account age
 */

module.exports = (_ => {
    const config = {
        "info": {
            "name": "AgeCounter",
            "author": "jlortiz",
            "version": "1.0.2",
            "description": "Rank server members by account age"
        }
    };

    return !window.BDFDB_Global || (!window.BDFDB_Global.loaded && !window.BDFDB_Global.started) ? class {
        getName() { return config.info.name; }
        getAuthor() { return config.info.author; }
        getVersion() { return config.info.version; }
        getDescription() { return `The Library Plugin needed for ${config.info.name} is missing. Open the Plugin Settings to download it. \n\n${config.info.description}`; }

        downloadLibrary() {
            require("request").get("https://mwittrien.github.io/BetterDiscordAddons/Library/0BDFDB.plugin.js", (e, r, b) => {
                if (!e && b && r.statusCode == 200) require("fs").writeFile(require("path").join(BdApi.Plugins.folder, "0BDFDB.plugin.js"), b, _ => BdApi.showToast("Finished downloading BDFDB Library", { type: "success" }));
                else BdApi.alert("Error", "Could not download BDFDB Library Plugin. Try again later or download it manually from GitHub: https://mwittrien.github.io/downloader/?library");
            });
        }

        load() {
            if (!window.BDFDB_Global || !Array.isArray(window.BDFDB_Global.pluginQueue)) window.BDFDB_Global = Object.assign({}, window.BDFDB_Global, { pluginQueue: [] });
            if (!window.BDFDB_Global.downloadModal) {
                window.BDFDB_Global.downloadModal = true;
                BdApi.showConfirmationModal("Library Missing", `The Library Plugin needed for ${config.info.name} is missing. Please click "Download Now" to install it.`, {
                    confirmText: "Download Now",
                    cancelText: "Cancel",
                    onCancel: _ => { delete window.BDFDB_Global.downloadModal; },
                    onConfirm: _ => {
                        delete window.BDFDB_Global.downloadModal;
                        this.downloadLibrary();
                    }
                });
            }
            if (!window.BDFDB_Global.pluginQueue.includes(config.info.name)) window.BDFDB_Global.pluginQueue.push(config.info.name);
        }
        start() { this.load(); }
        stop() { }
        getSettingsPanel() {
            let template = document.createElement("template");
            template.innerHTML = `<div style="color: var(--header-primary); font-size: 16px; font-weight: 300; white-space: pre; line-height: 22px;">The Library Plugin needed for ${config.info.name} is missing.\nPlease click <a style="font-weight: 500;">Download Now</a> to install it.</div>`;
            template.content.firstElementChild.querySelector("a").addEventListener("click", this.downloadLibrary);
            return template.content.firstElementChild;
        }
    } : (([Plugin, BDFDB]) => {
        return class AgeCounter extends Plugin {
            onLoad() {
                // this.patchedModules = {};
                return;
            }

            onStart() {
                BDFDB.PatchUtils.forceAllUpdates(this);
            }

            onStop() {
                BDFDB.PatchUtils.forceAllUpdates(this);
            }

            onGuildContextMenu(e) {
                if (e.instance.props.guild) {
                    e.returnvalue.props.children.unshift(BDFDB.ContextMenuUtils.createItem(BDFDB.LibraryComponents.MenuItems.MenuItem, {
                        label: "Count Ages",
                        id: BDFDB.ContextMenuUtils.createItemId(this.name, "agec"),
                        action: _ => this.countAges(e.instance.props.guild)
                    }));
                }
            }

            countAges(guild) {
                const members = BDFDB.ModuleUtils.findByProperties("getMemberIds").getMemberIds(guild.id);
                const userStore = BDFDB.ModuleUtils.findByProperties("getUser").getUser;
                const fromSnowflake = BDFDB.LibraryModules.TimestampUtils.extractTimestamp;
                let fd = "# Generated by jlortiz's AgeCounter\nID,Username,Timestamp\n";
                members.sort((a, b) => a - b);
                for (const mem of members) {
                    const user = userStore(mem);
                    let uname = user.username;
                    if (uname.includes("\"")) {
                        uname = "\"" + uname + "#" + user.discriminator + "\"";
                    } else {
                        uname += "#" + user.discriminator;
                    }
                    fd += mem + "," + uname + ",";
                    fd += BDFDB.DiscordObjects.Timestamp(fromSnowflake(user.id)).format("DD-MM-YYYY HH:mm:ss") + "\n";
                }

                let hrefURL = window.URL.createObjectURL(new Blob([fd]));
                let tempLink = document.createElement("a");
                tempLink.href = hrefURL;
                tempLink.download = guild.name + "-ages.csv";
                tempLink.click();
                window.URL.revokeObjectURL(hrefURL);
            }
        };
    })(window.BDFDB_Global.PluginUtils.buildPlugin(config));
})();
